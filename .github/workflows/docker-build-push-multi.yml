name: Docker Build and Push [multi]

on:
  workflow_run:
    workflows: [ "Make Project" ]
    types:
      - completed
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.PAT }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Checkout 
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }},push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          echo "Digest: $digest"
          echo "$digest" > /tmp/digests/digest-${{ matrix.platform }}.txt
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digest-${{ matrix.platform }}
          path: /tmp/digests/digest-${{ matrix.platform }}.txt
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download amd64 digest
        uses: actions/download-artifact@v3
        with:
          name: digest-linux/amd64
          path: /tmp/digests
      - name: Download arm64 digest
        uses: actions/download-artifact@v3
        with:
          name: digest-linux/arm64
          path: /tmp/digests
      - name: List downloaded files
        run: ls -l /tmp/digests
      - name: Debug Digest Content
        run: cat /tmp/digests/digest-linux/amd64.txt /tmp/digests/digest-linux/arm64.txt
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          digest_amd64=$(cat /tmp/digests/digest-linux/amd64.txt)
          digest_arm64=$(cat /tmp/digests/digest-linux/arm64.txt)
          digest_amd64=${digest_amd64#sha256:}
          digest_arm64=${digest_arm64#sha256:}
          echo "Digest amd64: $digest_amd64"
          echo "Digest arm64: $digest_arm64"
          docker buildx imagetools create --append --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}:latest \
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}@sha256:$digest_amd64 \
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}@sha256:$digest_arm64
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}:latest
